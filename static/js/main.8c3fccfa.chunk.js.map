{"version":3,"sources":["logo.svg","stuff/sidebar.js","stuff/softwareTesting.js","stuff/frontendDev.js","stuff/bugFix.js","stuff/webScrape.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SideBar","window","addEventListener","throttle","frontPage","document","querySelector","index","Math","abs","getBoundingClientRect","top","innerHeight","classList","remove","add","style","display","className","class","SoftwareTesting","Content","data-aos","data-aos-delay","data-aos-offset","src","FrontendDev","BugFix","WebScrape","MyInfo","AOS","init","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8c3fccfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport \"./sidebar.css\";\nimport {throttle} from 'lodash'\n\nfunction SideBar() {\n  function showNav() {\n    document.getElementById(\"sidebar\").classList.toggle(\"active\");\n  }\n\n//   window.addEventListener('scroll', function(ev) {\n\n//     var someDiv = document.querySelector('.front-page')\n//     var distanceToTop = someDiv.getBoundingClientRect();\n \n//     console.log(distanceToTop);\n//  });\n\n window.addEventListener('scroll', throttle(dist, 100))\n\n function dist() {\n    let frontPage = document.querySelector('.front-page')\n    let distanceFromTop = Math.abs(frontPage.getBoundingClientRect().top)\n\n    let index = ~~((distanceFromTop+(window.innerHeight/2))/window.innerHeight) + 1\n\n\n    let pos;\n    if(index > 1){\n      document.querySelector(`.highlight`).classList.remove('highlight')\n      pos = document.querySelector(`.nav-item:nth-child(${index-1})`)\n      pos.classList.add('highlight')\n    }\n\n    \n\n    if(index === 1) {\n      document.querySelector('.nav-bar').style.display = 'none'\n    } else {\n      document.querySelector('.nav-bar').style.display = 'inline-block'\n\n    }\n }\n\n\n\n  return (\n    <nav className=\"nav-bar \">\n      <ul className=\"nav-bar-nav\">\n\n      <li class=\"nav-item\">\n      <div className='chu'>\n          <a>Reflection</a>\n          </div>\n      </li>\n\n        <li class=\"nav-item highlight\">\n          <div className='chu'>\n          <a>Software Testing</a>\n          </div>\n        </li>\n\n        <li class=\"nav-item\">\n        <div className='chu'>\n          <a>Frontend Development</a>\n        </div>\n      </li>\n\n      <li class=\"nav-item\">\n      <div className='chu'>\n          <a>Bug Fixing</a>\n          </div>\n      </li>\n\n      \n\n      \n      </ul>\n    </nav>\n  );\n}\n\nexport default SideBar;\n","import React from \"react\";\nimport \"./softwareTesting.css\";\nimport SideBar from \"./sidebar\";\n\nfunction SoftwareTesting() {\n  function Content() {\n    return (\n      <div className=\"container background\">\n        <div>\n          <div\n            className=\"inner\"\n            data-aos=\"fade-up\"\n            data-aos-delay=\"200\"\n            data-aos-offset=\"500\"\n          >\n            <h1>Software testing</h1>\n          </div>\n          <p data-aos=\"fade-up\" data-aos-delay=\"200\" data-aos-offset=\"500\">\n            I wrote a fullsuite of testcases which covers both the API server\n            code and the Frontend webportal code. I wrote the unit and\n            integrations tests using Jest as a framework. By building unit and\n            integration tests. I learnt how to use assertions, spys and mocks to\n            test the functions and classes of the code, ensuring that errors\n            will be flagged out to the developer before deployment.\n          </p>\n\n          <p data-aos=\"fade-up\" data-aos-delay=\"200\" data-aos-offset=\"500\">\n            I used Cypress for the end to end testcases. By learning how to\n            write these testcases, I exposed myself to research on good testing\n            methodology. Furthermore as a bonus, my knowledge of CSS selectors\n            has broadened which will help with future web development projects\n            of mine.\n          </p>\n\n          <img\n            src=\"cypress.gif\"\n            data-aos=\"fade-left\"\n            data-aos-delay=\"200\"\n            data-aos-offset=\"500\"\n          ></img>\n          {/* <img\n            src=\"Unknown.png\"\n            data-aos=\"fade-left\"\n            data-aos-delay=\"500\"\n            data-aos-offset=\"450\"\n          ></img> */}\n          <p data-aos=\"fade-up\" data-aos-delay=\"700\" data-aos-offset=\"500\"></p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"background\">\n      <Content />\n    </div>\n  );\n}\n\nexport default SoftwareTesting;\n","import React from \"react\";\n\nfunction FrontendDev() {\n    return(\n    <div className='background container' data-aos=\"fade-up\" data-aos-delay=\"200\" data-aos-offset=\"500\"> \n        <h1>Frontend Development with Angular</h1>\n    </div>\n    )\n    \n}\n\nexport default FrontendDev;","import React from 'react';\n\nfunction BugFix() {\n    return (\n        <div className='background container' data-aos=\"fade-up\" data-aos-delay=\"200\" data-aos-offset=\"500\">\n            <h1>Bug Fixing on Angular and Nodejs</h1>\n        </div>\n    )\n}\n\nexport default BugFix;","import React from \"react\";\nimport SideBar from \"./sidebar\";\nimport \"./webScrape.css\";\n\nfunction WebScrape() {\n  function Content() {\n    return (\n      <div\n        className=\"container\"\n        data-aos=\"fade-up\"\n        data-aos-delay=\"200\"\n        data-aos-offset=\"300\"\n      >\n        <div>\n          <h1 data-aos=\"fade-up\" data-aos-delay=\"200\" data-aos-offset=\"200\">\n            My reflections on this internship\n          </h1>\n          <div>\n            <div className=\"text\">\n              <div\n                className=\"inner\"\n                data-aos=\"fade-up\"\n                data-aos-delay=\"400\"\n                data-aos-offset=\"200\"\n              >\n                Nalagenetics is a mordern Bio-Technological company that\n                provides genetic tests to patients through physicians,\n                determining the best course of medication for them through\n                Pharmacogenomics. As the company strives to improve their\n                Bio-Informatics algorithms and its outreach to more customers,\n                the software engineers in the company are here to streamline and\n                improve this experience to both its customers and the company.\n              </div>\n              <div\n                className=\"inner\"\n                data-aos=\"fade-up\"\n                data-aos-delay=\"200\"\n                data-aos-offset=\"200\"\n              >\n                When I first entered the company, I had minimal coding and\n                development experience. I was tasked to write testcases for the\n                API Server code to increase the testing coverage of the\n                codebase. It allowed me to be exposed to the codebase at a\n                comfortable pace. It was a good place to start learning about\n                the fundementals of software engineering and how software is\n                used for the business.\n              </div>\n              <div\n                className=\"inner\"\n                data-aos=\"fade-up\"\n                data-aos-delay=\"200\"\n                data-aos-offset=\"200\"\n              >\n                I moved on to help the Business Development team with web\n                scraping for physicians's informations, and writing testcases\n                for the Frontend webportal. This exposed me to using\n                technologies such as Selenium for scraping, Jest and Cypress for\n                Frontend testing.\n              </div>\n              <div\n                className=\"inner\"\n                data-aos=\"fade-up\"\n                data-aos-delay=\"200\"\n                data-aos-offset=\"200\"\n              >\n                For my final project I embarked on creating the Medication\n                Management feature for the patient portal. I got to use the\n                Angular framework to develop this feature, and this had me\n                needing to learn various features of frontend development like\n                state and lifecycle hooks.\n              </div>\n              <div\n                className=\"inner\"\n                data-aos=\"fade-up\"\n                data-aos-delay=\"200\"\n                data-aos-offset=\"200\"\n              >\n                Although this pandemic has forced everyone to work from home,\n                this experience interning at Nalagenetics did not fall short.\n                From the upper management sending welfare items, and my manager\n                keeping up to date with me and the team, I was glad to be part\n                of this close knit family. I had a fruitful time learning at a\n                fast pace to meet deadlines, and seeing the fruits of my labour\n                being deployed.\n              </div>\n              <div\n                className=\"inner\"\n                data-aos=\"fade-up\"\n                data-aos-delay=\"200\"\n                data-aos-offset=\"100\"\n              >\n                Scroll further to see the technologies I have employed in the internship\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"background\">\n      <SideBar />\n      <Content />\n    </div>\n  );\n}\n\nexport default WebScrape;\n","import React from 'react';\nimport ReactDOM from'react-dom';\nimport logo from './logo.svg';\nimport './App.scss';\nimport 'react-bootstrap';\nimport SoftwareTesting from './stuff/softwareTesting';\nimport SideBar from './stuff/sidebar'\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\nimport FrontendDev from './stuff/frontendDev';\nimport BugFix from './stuff/bugFix';\nimport WebScrape from './stuff/webScrape';\n\nAOS.init();\n\nfunction MyInfo() {\n  \n\n  return (\n      <div className='container front-page background' data-aos=\"fade-up\" data-aos-delay=\"500\" data-aos-offset=\"200\">\n        <h1 className=''>\n          My Internship at Nalagenetics\n        </h1>\n      </div>\n    \n  )\n}\n\n\n\nfunction App() {\n  return (\n    <div>\n      <MyInfo/>\n      <WebScrape/>\n      <SoftwareTesting/>\n      <FrontendDev/>\n      <BugFix/>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-bootstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}